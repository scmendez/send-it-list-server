{"version":3,"sources":["config.js","components/silnavbar/SILNavBar.js","components/signup/SignUp.js","components/signin/SignIn.js","components/climberhome/ClimberHome.js","components/editprofile/EditProfile.js","components/projectlist/ProjectList.js","components/searchroutes/SearchRoutes.js","components/routedetails/RouteDetails.js","components/editroute/EditRoute.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","SILNavBar","props","Navbar","expand","className","loggedInClimber","Fragment","to","onClick","onLogout","SignUp","Form","onSubmit","onSignUp","Control","type","id","name","placeholder","aria-describedby","Text","Button","SignIn","onSignIn","onChange","onUnmount","errorMessage","style","color","ClimberHome","useState","setLoggedInClimber","console","log","useEffect","climberId","_id","axios","get","withCredentials","then","response","data","prevloggedInClimber","Container","fluid","Image","src","alt","roundedCircle","username","size","EditProfile","event","onUsernameEdit","cloneProfile","JSON","parse","stringify","target","value","ProjectList","myProjects","map","route","Card","Img","variant","routeImg","Title","routeName","Subtitle","routeType","personalNotes","SearchRoutes","position","searchedCity","Object","values","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","searchedRoutesResults","onRouteSearch","length","MapContainer","width","height","center","zoom","scrollWheelZoom","TileLayer","attribution","url","i","positionMarker","latitude","longitude","customMarker","icon","Marker","Popup","rating","href","onAddRoute","RouteDetails","setRoute","routeDbId","match","params","routeRating","routePitches","routeLocation","routeURL","dateAccomplished","onDelete","EditRoute","listType","onRouteEdit","cloneNotes","withRouter","setErrorMessage","setMyProjects","setSearchedRoutesResults","setSearchedCity","history","useHistory","handleSignUp","preventDefault","email","password","post","push","handleSignIn","catch","err","error","handleUsernameEdit","climber","patch","updatedClimber","handleProfilePhotoEdit","handleRouteSearch","location","searchResults","routesResponse","routes","filter","cityLatLon","handleAddRoute","routeId","handleUnmount","handleDelete","delete","filteredProjects","eachRoute","handleRouteEdit","updatedRoute","exact","path","render","routeProps","onProfilePhotoEdit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9a9bd54.chunk.js","sourcesContent":["export const API_URL = 'https://send-it-list.herokuapp.com/api'\n//export const API_URL = 'http://localhost:5000/api'","import React from 'react'\nimport { Navbar, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport './SILNavBar.css'\n\nconst SILNavBar = (props) => {\n    return (\n        <Navbar expand=\"true\" className=\"nav-bar\">\n\n            {\n                props.loggedInClimber \n                ? (\n                    <React.Fragment>\n                        <Link to=\"/home\" className=\"btn home\">Home</Link>                        \n                        <Link to=\"/edit-profile\" className=\"btn edit-profile\">Edit Profile</Link>\n                        <button onClick={props.onLogout} className=\"btn logout\">Logout</button>\n                    </React.Fragment>\n                    ) \n                : (\n                    <React.Fragment>\n                        <Link to=\"/sign-in\" className=\"btn sign-in\">Sign In</Link>\n                        <Link to=\"/sign-up\" className=\"btn sign-up\">Sign Up</Link>\n                    </React.Fragment>                            \n                )\n            }\n\n        </Navbar>\n    )\n}\n\nexport default SILNavBar","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\n\nimport './SignUp.css'\n\nconst SignUp = (props) => {\n\n    if (props.loggedInClimber) {\n        return <Redirect to={'/home'} />\n    }\n    \n    return (\n        <Form onSubmit={props.onSignUp} className=\"form-styling sign-up-form\">\n            <div className=\"form-group\">\n                <Form.Control type=\"text\" className=\"form-control\" id=\"usernameInput\" name=\"username\" placeholder=\"Username\"/>\n            </div>\n            <div className=\"form-group\">\n                <Form.Control type=\"email\" className=\"form-control\" id=\"emailInput\" name=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Email\"/>\n            </div>\n            <div className=\"form-group\">\n                <Form.Control type=\"password\" className=\"form-control\" id=\"passwordInput\" name=\"password\" placeholder=\"Password\"/>\n                <br />\n                <Form.Text id=\"passwordRequirements\" className=\"form-text password-req\">Password requirements: Minimum 8 characters, a number, a special character, an uppercase letter, and a lowercase letter.</Form.Text>                \n            </div>\n            <Button type=\"submit\" className=\"btn btn-primary\">Submit</Button>\n        </Form>\n    )\n}\n\nexport default SignUp","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\n\nimport './SignIn.css'\n\nconst SignIn = (props) => {\n\n    if (props.loggedInClimber) {\n        return <Redirect to={'/home'} />\n    }\n    \n    return (\n        <Form onSubmit={props.onSignIn} className=\"form-styling sign-in-form\">\n            <div className=\"form-group\">\n                <Form.Control onChange={props.onUnmount} type=\"email\" className=\"form-control\" id=\"emailInput\" name=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Email\"/>\n            </div>\n            <div className=\"form-group\">\n                <Form.Control name=\"password\" type=\"password\" className=\"form-control\" id=\"passwordInput\" placeholder=\"Password\"/>\n            </div>\n            <Button type=\"submit\" className=\"btn btn-primary\">Submit</Button>  \n\n            {\n                props.errorMessage ? (\n                    <p style={{color: 'red'}}>{props.errorMessage}</p>\n                ) : (null)\n            }\n\n        </Form>\n    )\n}\n\nexport default SignIn","import React, {useEffect, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Container, Image, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport {API_URL} from '../../config'\n\nimport './ClimberHome.css'\n\nconst ClimberHome = (props) => {\n\n  const [loggedInClimber, setLoggedInClimber] = useState(props.loggedInClimber ? props.loggedInClimber: null)\n  console.log('propsloggedinclimber', loggedInClimber)\n\n\n  useEffect(() => {\n\n    let climberId = props.loggedInClimber ? (props.loggedInClimber._id) : null\n\n    if (climberId) {\n        axios.get(`${API_URL}/climberInfo/${climberId}`, { withCredentials: true })\n        .then((response) => {\n            console.log('axios climber esponse', response.data)\n            setLoggedInClimber(response.data)\n        })\n    }\n  }, [])\n\n      useEffect(() => {\n        const prevloggedInClimber = loggedInClimber\n        console.log('CDU', prevloggedInClimber)\n        if (props.loggedInClimber && !prevloggedInClimber ) {\n             setLoggedInClimber(props.loggedInClimber)\n        }\n \n    })\n\n    if (!loggedInClimber) {\n        return <Redirect to={'/sign-up'} />\n    }\n\n    return (\n        <div>\n            <Container fluid>\n                <Image className=\"profile-photo\" src=\"/images/defaultProfilePhoto.png\" alt=\"profile pic\" roundedCircle />\n                {\n                    loggedInClimber ? ( <h2>Hello, {loggedInClimber.username}!</h2> ) : null\n                }\n                <Button size=\"lg\" className=\"proj-btn\"><Link to=\"/current-projects\" className=\"proj-links\">Current Projects</Link></Button>\n                <br />\n                <Button size=\"lg\" className=\"proj-btn\"><Link to=\"/future-projects\" className=\"proj-links\">Potential Projects</Link></Button>\n                <br />\n                <Button size=\"lg\" className=\"proj-btn\"><Link to=\"/sent-projects\" className=\"proj-links\">Sent Projects</Link></Button>\n                <br />\n                <Button size=\"lg\" className=\"search-btn\"><Link to=\"/search-routes\" className=\"search-link\">Search routes</Link></Button>\n            </Container>    \n        </div>\n    )\n\n}\n\nexport default ClimberHome","import React, {useState, useEffect, usePrevious} from 'react'\nimport axios from 'axios'\nimport { Form } from 'react-bootstrap'\n\nimport {API_URL} from '../../config'\n\nimport './EditProfile.css'\n\nconst EditProfile = (props) => {\n\n    const [loggedInClimber, setLoggedInClimber] = useState(props.loggedInClimber)\n    console.log('props', props.loggedInClimber)\n\n    useEffect(() => {\n        let climberId = props.loggedInClimber ? (props.loggedInClimber._id) : null\n        console.log('climber', climberId)\n        if (climberId) {\n            axios.get(`${API_URL}/climberInfo/${climberId}`, { withCredentials: true })\n                .then((response) => {\n                    console.log('axios climber esponse', response.data)\n                    setLoggedInClimber(response.data)\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        const prevloggedInClimber = loggedInClimber\n        console.log('CDU', prevloggedInClimber)\n        if (props.loggedInClimber && !prevloggedInClimber ) {\n             setLoggedInClimber(props.loggedInClimber)\n        }\n \n    })\n\n\n    const handleNameChange = (event) => {\n        let cloneProfile = JSON.parse(JSON.stringify(loggedInClimber))\n        cloneProfile.username = event.target.value\n        setLoggedInClimber(cloneProfile)\n    }\n\n    if (!loggedInClimber) {\n        return null\n    }\n        console.log('SANDRA HERE', loggedInClimber)\n    const { username } = loggedInClimber\n\n    return (\n        <React.Fragment>\n        <Form onSubmit={ (event) => {props.onUsernameEdit(event, loggedInClimber)}} className=\"edit-username-form\">\n            <label>Username: </label>\n            <input onChange={handleNameChange} type=\"text\" value={username} name=\"username\" ></input>\n            <button type=\"submit\" className=\"save-username-btn\">Save username edit</button>\n        </Form>\n\n            <hr /> \n\n        {/* <form onSubmit={ (event) => {props.onProfilePhotoEdit(event, loggedInClimber)}}>\n            <label>Profile photo: </label>\n            <input onChange={handleNameChange} type=\"text\" value={username} ></input>\n            <button type=\"submit\">Upload image</button>\n        </form> */}\n        </React.Fragment>\n    )\n}\n\nexport default EditProfile","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Card } from 'react-bootstrap'\nimport './ProjectList.css'\n\nconst ProjectList = (props) => {\n\n//   const [loggedInClimber, setLoggedInClimber] = useState(null)\n//   const [myProjects, setMyProjects] = useState([])\n\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     if (!loggedInClimber) {\n//       axios.get(`${API_URL}/climber`, { withCredentials: true })\n//         .then((response) => {\n//           console.log('Check here', response.data)\n//           setLoggedInClimber(response.data)\n//         })\n//     }\n\n//     axios.get(`${API_URL}/myProjects`, { withCredentials: true })\n//       .then((response) => {\n//         setMyProjects(response.data)\n//       })\n//   }, [])\n\n    const { myProjects } = props\n    //console.log(myProjects)\n\n    return (\n        <React.Fragment>\n            {\n                myProjects.map((route) => {\n                    return (\n                        <Container key={route._id} className=\"route-card\">\n                            <Card fluid=\"true\" className=\"card-info\">\n                                    <Card.Img variant=\"top\" src={route.routeImg} className=\"card-img\"/>\n                                    <Card.Title>{route.routeName}</Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">{route.routeType}</Card.Subtitle>\n                                    <Card.Text>\n                                        <b>Personal Notes: </b> { route.personalNotes ? (<p>{route.personalNotes}</p>) : (<p>No notes yet!</p>) }\n                                    </Card.Text>\n                                    <Link to={`/details/${route._id}`} className=\"more-info-link\">More info</Link>\n                            </Card>\n                        </Container>\n                    )\n                })\n            }\n        </React.Fragment>\n    )\n}\n\nexport default ProjectList","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet';\nimport { Form } from 'react-bootstrap'\n\nimport './SearchRoutes.css'\n\nconst SearchRoutes = (props) => {\n    \n    const position = props.searchedCity ? Object.values(props.searchedCity) : [34.0522, -118.2437]\n\n    useEffect(() => {\n        //for leaflet marker\n        delete L.Icon.Default.prototype._getIconUrl;\n        L.Icon.Default.mergeOptions({\n          iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n          iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n          shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n        });\n      }, []);\n\n    useEffect(() => {\n        return props.onUnmount\n    }, [])\n\n    const searchedRoutesResults = props.searchedRoutesResults || []\n    console.log('within searchroutes js', searchedRoutesResults)\n\n    return(\n        <React.Fragment>\n            <h1>Search Routes</h1>\n            <form onSubmit={props.onRouteSearch}>\n                <input type=\"text\" name=\"location\" placeholder=\"Location\" />\n                <select name=\"routeType\" className=\"route-type-btn\">\n                    <option value=\"Boulder\">Boulder</option>\n                    <option value=\"Sport\">Sport</option>\n                    <option value=\"Trad\">Trad</option>\n                </select>\n                <button type=\"submit\">Submit</button>\n            </form>\n            {\n                searchedRoutesResults.length ? (\n                <MapContainer style={{width: '900px', height: '400px'}} center={position} zoom={13} scrollWheelZoom={false}>\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                        {\n                            searchedRoutesResults.map((route, i) => {\n                                let positionMarker  = [route.latitude, route.longitude]\n                                const customMarker = L.icon({ iconUrl: 'https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-32.png', })\n                                return  (\n                                    <Marker icon={customMarker} position={positionMarker} key={route.id}>\n                                        <Popup>\n                                            <b>Name: </b>{route.name}\n                                            <br />\n                                            <b>Type: </b>{route.type}\n                                            <br />\n                                            <b>Rating: </b>{route.rating}\n                                            <br />\n                                            <a href={route.url} target=\"_blank\">More details on MountainProject</a>\n                                            <br />\n                                            <button onClick={ () => {props.onAddRoute(route.id)} }>Add route</button>\n                                        </Popup>\n                                    </Marker>)\n                            })\n                        }\n                </MapContainer>\n                ) : null\n            }\n        </React.Fragment>\n    )\n}\nexport default SearchRoutes","import React, { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\n\nimport {API_URL} from '../../config'\n\nimport './RouteDetails.css'\n\nconst RouteDetails = (props) => {\n\n    const [route, setRoute] = useState({})\n    const [location, setLocation] = useState([])\n\n    useEffect(() => {\n        //console.log('routeprops', props)\n        let routeDbId = props.match.params.routeDbId\n\n        axios.get(`${API_URL}/details/${routeDbId}`, { withCredentials: true })\n            .then((response) => {\n                console.log('routedbid response', response)\n                setRoute(response.data)\n                console.log(route)\n            })\n    }, [])\n\n    const { _id, routeName, routeType, routeRating, routePitches, routeLocation, personalNotes, dateAccomplished, routeURL } = route\n    \n    return (\n        <div className=\"route-details\">\n            <b>Route Name: </b>{routeName}\n            <br />\n            <b>Route Type: </b>{routeType}\n            <br />\n            <b>Route Rating: </b>{routeRating}\n            <br />\n            {\n                routeType == 'Boulder' ? null : (<p>Route Pitches: {routePitches}</p>)\n            }\n            <br />\n            <b>Location: </b>{routeLocation}\n            <br />\n            <br />\n            <b>Personal Notes: </b>{ personalNotes }\n            <br />\n            {/* <b>Date Accomplished: </b>{ dateAccomplished } */}\n            {/* need a ternary here for if listType is sent */}\n            <br />\n            <Link to={`/edit/${_id}`}><button>Edit</button></Link>\n            <button onClick={ () => { props.onDelete(_id) } }>Delete</button>\n            <br />\n            <a href={routeURL} target=\"_blank\">Mtn Proj details</a>\n        </div>\n    )\n}\n\nexport default RouteDetails","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport {API_URL} from '../../config'\nimport './EditRoute.css'\n\nconst EditRoute = (props) => {\n\n    const [route, setRoute] = useState({})\n\n    useEffect(() => {\n        //console.log('routeprops', props)\n        let routeDbId = props.match.params.routeDbId\n\n        axios.get(`${API_URL}/details/${routeDbId}`, { withCredentials: true })\n            .then((response) => {\n                console.log('routedbid response', response)\n                setRoute(response.data)\n        })\n    }, [])\n\n    const personalNotesEdit = (event) => {\n        let cloneNotes = JSON.parse(JSON.stringify(route))\n        cloneNotes.personalNotes = event.target.value\n        setRoute(cloneNotes)\n    }\n\n    const { routeName, routeType, routeRating, routePitches, routeLocation, personalNotes, dateAccomplished, listType } = route\n\n    return (\n        <form onSubmit={ (event) => {props.onRouteEdit(event, route)}} className=\"route-details\">\n            <b>Route Name: </b>{routeName}\n            <br />\n            <b>Route Type: </b>{routeType}\n            <br />\n            <b>Route Rating: </b>{routeRating}\n            <br />\n            <b>Type: </b>\n            {\n                routeType == 'Boulder' ? null : (<p>Route Pitches: {routePitches}</p>)\n            }\n            <br />\n            <b>Location: </b>\n            {routeLocation}\n            <br />\n            <label>Personal Notes </label>\n            <input name=\"personalNotes\" onChange={personalNotesEdit} type=\"text\" value={personalNotes}></input>\n            <br />\n            {/* <label>Date Accomplished </label>\n            <input name=\"dateAccomplished\" type=\"text\" value={dateAccomplished}></input>\n            <br /> */}\n            <label>List </label>\n            <select name=\"listType\">\n                <option value={listType}>{listType}</option>\n                <option value=\"current\">Current</option>\n                <option value=\"future\">Future</option>\n                <option value=\"sent\">Sent</option>\n            </select>\n            <br />\n            <button type=\"submit\">Edit</button>\n        </form>\n    )\n}\n\nexport default EditRoute","import React, { useState, useEffect } from 'react'\nimport { Switch, Route, withRouter, useHistory } from 'react-router-dom'\n\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './App.css';\n\nimport axios from 'axios'\n\nimport {API_URL} from './config'\n\nimport SILNavBar from './components/silnavbar/SILNavBar'\nimport SignUp from './components/signup/SignUp'\nimport SignIn from './components/signin/SignIn'\nimport ClimberHome from './components/climberhome/ClimberHome'\nimport EditProfile from './components/editprofile/EditProfile'\nimport ProjectList from './components/projectlist/ProjectList'\nimport SearchRoutes from './components/searchroutes/SearchRoutes'\nimport RouteDetails from './components/routedetails/RouteDetails'\nimport EditRoute from './components/editroute/EditRoute'\n\nconst App = () => {\n\n  const [loggedInClimber, setLoggedInClimber] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [myProjects, setMyProjects] = useState([])\n  const [searchedRoutesResults, setSearchedRoutesResults] = useState([])\n  const [searchedCity, setSearchedCity] = useState(null)\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!loggedInClimber) {\n      axios.get(`${API_URL}/climber`, { withCredentials: true })\n        .then((response) => {\n          console.log('Check here', response.data)\n          setLoggedInClimber(response.data)\n        })\n    }\n\n    axios.get(`${API_URL}/myProjects`, { withCredentials: true })\n      .then((response) => {\n        setMyProjects(response.data)\n      })\n  }, [])\n\n  const handleSignUp = (event) => {\n    event.preventDefault();\n\n    const { username, email, password } = event.target\n\n    axios.post(`${API_URL}/signup`, {\n      username: username.value,\n      email: email.value,\n      password: password.value\n    }, {withCredentials: true})\n      .then((response) => {\n        setLoggedInClimber(response.data)\n        history.push('/home')\n      })\n  }\n\n  const handleSignIn = (event) => {\n    event.preventDefault();\n\n    const { email, password } = event.target\n\n    axios.post(`${API_URL}/signin`, {\n      email: email.value,\n      password: password.value\n    }, { withCredentials: true })\n      .then((response) => {\n        setLoggedInClimber(response.data)\n        history.push('/home')\n      })\n      .catch((err) => {\n        setErrorMessage(err.response.data.error)\n      })\n  }\n\n  const handleLogOut = () => {\n    axios.post(`${API_URL}/logout`, {}, { withCredentials: true })\n      .then(() => {\n        setLoggedInClimber(null)\n        history.push('/')\n      })\n  }\n\n  const handleUsernameEdit = (event, climber) => {\n    event.preventDefault();\n\n    const { username } = event.target\n    \n    //console.log('handle edit')\n    axios.patch(`${API_URL}/editUsername/${climber._id}`, {username: username.value}, { withCredentials: true })\n      .then((updatedClimber) => {\n        console.log('HEREEEE', updatedClimber)\n          setLoggedInClimber(updatedClimber.data)  \n          history.push('/home')      \n      })\n  }\n\n  const handleProfilePhotoEdit = (event, climber) => {\n    console.log('profile photo edit')\n  }\n\n  const handleRouteSearch = (event) => {\n    event.preventDefault();\n\n    const { location, routeType } = event.target\n    console.log(routeType.value)\n\n    axios.get(`${API_URL}/mapSearch/${location.value}`, { withCredentials: true })\n      .then((response) => {\n        let searchResults = response.data.routesResponse.routes\n        setSearchedRoutesResults(searchResults.filter((route) => {\n            return route.type === routeType.value\n            }))\n        setSearchedCity(response.data.cityLatLon)\n        console.log('within function', searchedRoutesResults)\n      })\n  }\n\n  const handleAddRoute = (routeId) => {\n\n    axios.get(`${API_URL}/add-climbing-route/${routeId}`, { withCredentials: true })\n      .then((response) => {\n        console.log(response)\n        setMyProjects([...myProjects, response.data])\n        history.push('/home')\n      })\n  }\n\n  const handleUnmount = () => {\n    setSearchedRoutesResults(null)\n\n  }\n\n  const handleDelete = (routeDbId) => {\n    axios.delete(`${API_URL}/delete/${routeDbId}`, { withCredentials: true })\n      .then(() => {\n\n        let filteredProjects = myProjects.filter((eachRoute) => {\n              return eachRoute._id !== routeDbId\n          })\n\n        setMyProjects(filteredProjects)\n        history.push('/home')\n      })\n  }\n\n  const handleRouteEdit = (event, route) => {\n    event.preventDefault();\n    console.log('routeDbId', route._id)\n\n    const { personalNotes, dateAccomplished, listType } = event.target\n    \n    //console.log('handle edit')\n    axios.patch(`${API_URL}/edit/${route._id}`, {\n      personalNotes: personalNotes.value,\n      // dateAccomplished: dateAccomplished.value,\n      listType: listType.value\n    }, { withCredentials: true })\n      .then(() => {\n        let updatedRoute = myProjects.map((eachRoute) => {\n          if (eachRoute._id == route._id) {\n            eachRoute = route\n          }\n          return eachRoute\n        })\n\n        setMyProjects(updatedRoute)\n        history.push('/home')\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Send-It List</h1>\n      <SILNavBar onLogout={handleLogOut} loggedInClimber={loggedInClimber}/>\n\n      <Switch>\n\n        <Route exact path=\"/\" render={ (routeProps) => {\n          return <ClimberHome {...routeProps} loggedInClimber={loggedInClimber} />\n        } }/>\n\n        <Route path=\"/sign-up\" render={ (routeProps) => {\n          return <SignUp onSignUp={handleSignUp} {...routeProps} loggedInClimber={loggedInClimber} />\n        } }/>\n\n        <Route path=\"/sign-in\" render={ (routeProps) => {\n          return <SignIn onSignIn={handleSignIn} {...routeProps} errorMessage={errorMessage} />\n        } } />\n\n        <Route path=\"/home\" render={ () => {\n          return <ClimberHome loggedInClimber={loggedInClimber} />\n        } }/>\n\n        <Route path=\"/edit-profile\" render={ (routeProps) => {\n          return <EditProfile {...routeProps} loggedInClimber={loggedInClimber} onUsernameEdit={handleUsernameEdit} onProfilePhotoEdit={handleProfilePhotoEdit}/>\n        } } />\n\n        <Route path=\"/current-projects\" render={ (routeProps) => {\n          return <ProjectList {...routeProps} onDelete={handleDelete} myProjects={myProjects.filter((route) => {\n            return route.listType === 'current'\n            })} />\n        } }/>\n\n        <Route path=\"/future-projects\" render={ (routeProps) => {\n          return <ProjectList {...routeProps} onDelete={handleDelete} myProjects={myProjects.filter((route) => {\n            return route.listType === 'future'\n            })} />\n        } }/>\n\n        <Route path=\"/sent-projects\" render={ (routeProps) => {\n          return <ProjectList {...routeProps} onDelete={handleDelete} myProjects={myProjects.filter((route) => {\n            return route.listType === 'sent'\n            })} />\n        } }/>\n\n        <Route path=\"/search-routes\" render={ (routeProps) => {\n          return <SearchRoutes {...routeProps} onRouteSearch={handleRouteSearch} onAddRoute={handleAddRoute} searchedRoutesResults={searchedRoutesResults} searchedCity={searchedCity} onUnmount={handleUnmount}/>\n        } }/>\n\n        <Route path=\"/details/:routeDbId\" render={ (routeProps) => {\n          return <RouteDetails {...routeProps} onDelete={handleDelete} />\n        } }></Route>\n\n        <Route path=\"/edit/:routeDbId\" render={ (routeProps) => {\n          return <EditRoute {...routeProps} onRouteEdit={handleRouteEdit} />\n        } }></Route>\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default withRouter(App);\n\n//add onUnmount to signIn\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}